name: Withaeng CD with Gradle, Github Actions

on:
  push:
    branches: [ "develop" ] # todo: main branch로 변경

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: 프로젝트 빌드
        run: ./gradlew clean build
        shell: bash

      - name: 운영서버 디렉토리 정리
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: sudo rm -rf /tmp/withaeng-api

      - name: 빌드 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: withaeng-api
          target: /tmp

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: 운영서버 애플리케이션 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: |
            SPRING_PROFILES_ACTIVE=prod
            DATABASE_DRIVER=${{ secrets.DATABASE_DRIVER }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            JWT_ISSUER=${{ secrets.JWT_ISSUER }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            JASYPT_PASSWORD=${{ secrets.JASYPT_PASSWORD }}
          script: |
            sudo docker compose -f /tmp/withaeng-api/docker-compose.yml down
            sudo -E docker compose -f /tmp/withaeng-api/docker-compose.yml up -d